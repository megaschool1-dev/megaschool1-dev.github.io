name: gh-pages

on: [push, pull_request]

jobs:
  push:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Get Pull Request Number
        id: pr
        run: echo "pull_request_number=$(gh pr view --json number -q .number || echo "")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: gh pr view --json number -q .number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save Pull Request Number
        id: pr2
        run: echo "pr_num=$(gh pr view --json number -q .number || echo "")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ${{ steps.pr2.outputs.pr_num }}
        name: Print Out
    outputs:
        sanity: ${{ steps.pr2.outputs.pr_num }}

  pull-request:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - run: echo ${{ github.event.number }}
  
  globals:
    runs-on: ubuntu-latest
    steps:
      - id: get_pr_number
        run: echo "pull_request_number=$(echo ${{ needs.steps.pr.outputs.pull_request_number }} || echo ${{ github.event.number }})" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.get_pr_number.pull_request_number }}
    outputs:
      pr_number: steps.get_pr_number.pull_request_number

  build:
    runs-on: ubuntu-latest
    steps:
    # - name: Get Pull Request Number
    #   run: echo "PULL_NUMBER=$(echo "$GITHUB_REF")" >> $GITHUB_ENV
    #   shell: bash
    - name: Test 7
      run: echo ${{ needs.globals.outputs.pr_number }}
    # - uses: actions/checkout@v2
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: 8.0.x
    # - name: DotNet Bump Versions
    #   uses: SiqiLu/dotnet-bump-version@2.0.0
    #   with:
    #       version_file: "**/*.csproj"
    #       version_mask: "0.0.0.1"
    #       version_overwrite: "*.*.*.${{ github.event.pull_request.number }}" 
    # - name: Publish with dotnet
    #   run: dotnet publish ./src --configuration Release --output build
    # - name: Deploy to Github Pages
    #   uses: JamesIves/github-pages-deploy-action@releases/v3
    #   with:
    #     ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    #     BASE_BRANCH: main # The branch the action should deploy from.
    #     BRANCH: gh-pages-from-actions # The branch the action should deploy to.
    #     FOLDER: build/wwwroot # The folder the action should deploy.      
    #     SINGLE_COMMIT: true              